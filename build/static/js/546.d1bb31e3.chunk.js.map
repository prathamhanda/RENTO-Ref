{"version":3,"file":"static/js/546.d1bb31e3.chunk.js","mappings":"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","sources":["pages/owner/OwnerDashboard.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useListing } from '../../context/ListingContext';\nimport { useBooking } from '../../context/BookingContext';\nimport { useAuth } from '../../context/AuthContext';\nimport Spinner from '../../components/common/Spinner';\nimport axios from 'axios';\n\nconst OwnerDashboard = () => {\n  const { getOwnerListings } = useListing();\n  const { getOwnerBookings } = useBooking();\n  const { user } = useAuth();\n  \n  const [stats, setStats] = useState({\n    totalListings: 0,\n    activeListings: 0,\n    totalBookings: 0,\n    pendingBookings: 0,\n    confirmedBookings: 0,\n    cancelledBookings: 0,\n    totalEarnings: 0,\n    monthlyEarnings: 0\n  });\n  const [recentBookings, setRecentBookings] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        setIsLoading(true);\n        // Fetch owner listings\n        const listings = await getOwnerListings();\n        const activeListings = listings.filter(listing => listing.isActive);\n        \n        // Fetch owner bookings\n        const bookings = await getOwnerBookings();\n        const pendingBookings = bookings.filter(booking => booking.status === 'pending');\n        const confirmedBookings = bookings.filter(booking => booking.status === 'confirmed');\n        const cancelledBookings = bookings.filter(booking => booking.status === 'cancelled');\n        \n        // Calculate total earnings from confirmed bookings\n        const totalEarnings = confirmedBookings.reduce((sum, booking) => sum + booking.amount, 0);\n        \n        // Calculate monthly earnings (bookings from current month)\n        const now = new Date();\n        const currentMonth = now.getMonth();\n        const currentYear = now.getFullYear();\n        const monthlyEarnings = confirmedBookings\n          .filter(booking => {\n            const bookingDate = new Date(booking.createdAt);\n            return bookingDate.getMonth() === currentMonth && \n                   bookingDate.getFullYear() === currentYear;\n          })\n          .reduce((sum, booking) => sum + booking.amount, 0);\n        \n        // Get recent bookings (last 5)\n        const recent = [...bookings]\n          .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\n          .slice(0, 5);\n        \n        // Update state\n        setStats({\n          totalListings: listings.length,\n          activeListings: activeListings.length,\n          totalBookings: bookings.length,\n          pendingBookings: pendingBookings.length,\n          confirmedBookings: confirmedBookings.length,\n          cancelledBookings: cancelledBookings.length,\n          totalEarnings,\n          monthlyEarnings\n        });\n        setRecentBookings(recent);\n        setIsLoading(false);\n      } catch (err) {\n        console.error('Error fetching dashboard data:', err);\n        setError('Failed to load dashboard data. Please try again.');\n        setIsLoading(false);\n      }\n    };\n    \n    fetchDashboardData();\n  }, [getOwnerListings, getOwnerBookings]);\n\n  useEffect(() => {\n    const fetchDashboardStats = async () => {\n      try {\n        const response = await axios.get('/api/owner/dashboard/stats');\n        setStats(response.data);\n      } catch (error) {\n        console.error('Error fetching dashboard stats:', error);\n      }\n    };\n\n    fetchDashboardStats();\n  }, []);\n\n  // Format currency for display\n  const formatPrice = (price) => {\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      maximumFractionDigits: 0\n    }).format(price);\n  };\n  \n  // Format date for display\n  const formatDate = (dateString) => {\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\n    return new Date(dateString).toLocaleDateString('en-IN', options);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center h-full\">\n        <Spinner size=\"large\" color=\"indigo\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-4\">\n        <div className=\"bg-red-50 border-l-4 border-red-400 p-4 mb-6 rounded-md\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-red-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm text-red-700\">{error}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-6\">Dashboard</h1>\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h2 className=\"text-xl font-semibold mb-2\">Total Listings</h2>\n          <p className=\"text-3xl font-bold text-blue-600\">{stats.totalListings}</p>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h2 className=\"text-xl font-semibold mb-2\">Active Bookings</h2>\n          <p className=\"text-3xl font-bold text-green-600\">{stats.activeListings}</p>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h2 className=\"text-xl font-semibold mb-2\">Total Earnings</h2>\n          <p className=\"text-3xl font-bold text-purple-600\">\n            ${stats.totalEarnings.toFixed(2)}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OwnerDashboard; "],"names":["OwnerDashboard","getOwnerListings","useListing","getOwnerBookings","useBooking","user","useAuth","stats","setStats","useState","totalListings","activeListings","totalBookings","pendingBookings","confirmedBookings","cancelledBookings","totalEarnings","monthlyEarnings","recentBookings","setRecentBookings","isLoading","setIsLoading","error","setError","useEffect","async","listings","filter","listing","isActive","bookings","booking","status","reduce","sum","amount","now","Date","currentMonth","getMonth","currentYear","getFullYear","bookingDate","createdAt","recent","sort","a","b","slice","length","err","console","fetchDashboardData","response","axios","get","data","fetchDashboardStats","_jsx","className","children","Spinner","size","color","_jsxs","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","toFixed"],"sourceRoot":""}