{"version":3,"file":"static/js/242.1080a8d0.chunk.js","mappings":"sPAQA,MAiaA,EAjaoBA,KAClB,MAAOC,IAAgBC,EAAAA,EAAAA,MACjBC,GAAWC,EAAAA,EAAAA,OACX,KAAEC,IAASC,EAAAA,EAAAA,OACX,eAAEC,IAAmBC,EAAAA,EAAAA,MACrB,cAAEC,EAAa,QAAEC,EAAO,MAAEC,IAAUC,EAAAA,EAAAA,KAEpCC,EAAYZ,EAAaa,IAAI,cAE5BC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,OAChCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,CAC7CG,YAAa,GACbC,SAAU,EACVC,UAAW,EACXC,QAAS,MAEJC,EAAQC,IAAaR,EAAAA,EAAAA,UAAS,CAAC,IAC/BS,EAAWC,IAAgBV,EAAAA,EAAAA,WAAS,IACpCW,EAAYC,IAAiBZ,EAAAA,EAAAA,UAAS,OAE7Ca,EAAAA,EAAAA,YAAU,KACR,IAAKzB,EAEH,YADAF,EAAS,SAAU,CAAE4B,MAAO,CAAEC,KAAM,2BAA2BnB,OAIjE,IAAKA,EAEH,YADAV,EAAS,WAIU8B,WACnB,IACE,MAAMC,QAAa3B,EAAeM,GAClCG,EAAWkB,GAGX,MAAMC,EAAW,IAAIC,KACrBD,EAASE,QAAQF,EAASG,UAAY,GACtCnB,GAAeoB,IAAI,IACdA,EACHnB,YAAae,EAASK,cAAcC,MAAM,KAAK,OAGjDd,GAAa,EACf,CAAE,MAAOe,GACPC,QAAQhC,MAAM,0BAA2B+B,GACzCb,EAAc,qDACdF,GAAa,EACf,GAGFiB,EAAc,GACb,CAAC/B,EAAWN,EAAgBJ,EAAUE,IAEzC,MA+CMwC,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1B9B,GAAeoB,IAAI,IACdA,EACH,CAACQ,GAAgB,aAATA,GAAgC,cAATA,EAAuBG,SAASF,EAAO,IAAMA,MAI1ExB,EAAOuB,IACTtB,GAAUc,IAAI,IACTA,EACH,CAACQ,GAAO,QAEZ,EAwBII,EAAeC,GACZ,IAAIC,KAAKC,aAAa,QAAS,CACpCC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IACtBC,OAAON,GAINO,EAAuBA,IACtB5C,EACEA,EAAQqC,MAAQlC,EAAYG,SADd,EAIvB,OAAIK,GAEAkC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAC,UACTF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gDAA+CD,UAC5DF,EAAAA,EAAAA,KAACI,EAAAA,EAAO,CAACC,KAAK,QAAQC,MAAM,eAMhCtC,IAAeb,GAEf6C,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAC,UACTK,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,8CAA6CD,SAAA,EAC1DF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,qDAAoDD,UACjEK,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,OAAMD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,UAC5BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uBAAuBK,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAcR,UACzFF,EAAAA,EAAAA,KAAA,QAAMW,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,2DAGzEd,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACnBF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAChClC,GAAc,iDAKvBgC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,mBAAkBD,UAC/BF,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CACHC,GAAG,UACHb,UAAU,4NAA2ND,SACtO,4BAUTF,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAC,UACTF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,0BAAyBD,UACtCK,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,8CAA6CD,SAAA,EAE1DF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAY,aAAW,aAAYD,UAChDK,EAAAA,EAAAA,MAAA,MAAIJ,UAAU,8BAA6BD,SAAA,EACzCF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,GAAG,IAAIb,UAAU,oCAAmCD,SAAC,YAE7DK,EAAAA,EAAAA,MAAA,MAAIJ,UAAU,oBAAmBD,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,wBAAwBK,KAAK,OAAOE,OAAO,eAAeD,QAAQ,YAAWP,UAC1FF,EAAAA,EAAAA,KAAA,QAAMW,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,oBAEvEd,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,GAAI,aAAa/D,IAAakD,UAAU,yCAAwCD,SACnF/C,EAAQ8D,YAGbV,EAAAA,EAAAA,MAAA,MAAIJ,UAAU,oBAAmBD,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,wBAAwBK,KAAK,OAAOE,OAAO,eAAeD,QAAQ,YAAWP,UAC1FF,EAAAA,EAAAA,KAAA,QAAMW,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,oBAEvEd,EAAAA,EAAAA,KAAA,QAAMG,UAAU,iCAAgCD,SAAC,sBAKvDK,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,wCAAuCD,SAAA,EAEpDF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,UAC5BK,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,gDAA+CD,SAAA,EAC5DK,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,+BAA8BD,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,mCAAkCD,SAAC,oBACjDF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,gBAAeD,SAAC,oDAG9BnD,IACCiD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,oDAAmDD,UAChEK,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,OAAMD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,UAC5BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uBAAuBK,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAcR,UACzFF,EAAAA,EAAAA,KAAA,QAAMW,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,2DAGzEd,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACnBF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAChCnD,YAOXwD,EAAAA,EAAAA,MAAA,QAAMW,SAjIC7C,UAGnB,GAFAa,EAAEiC,iBAhEiBC,MACnB,MAAMC,EAAY,CAAC,EAGnB,GAAK/D,EAAYE,YAEV,CACL,MAAM8D,EAAe,IAAI9C,KAAKlB,EAAYE,aACpC+D,EAAQ,IAAI/C,KAOlB,GANA+C,EAAMC,SAAS,EAAG,EAAG,EAAG,GAEpBF,EAAeC,IACjBF,EAAU7D,YAAc,uCAGf,OAAPL,QAAO,IAAPA,GAAAA,EAASsE,cAAe,CAC1B,MAAMA,EAAgB,IAAIjD,KAAKrB,EAAQsE,eACvCA,EAAcD,SAAS,EAAG,EAAG,EAAG,GAE5BF,EAAeG,IACjBJ,EAAU7D,YAAc,6BAA6BiE,EAAcC,uBAEvE,CACF,MAlBEL,EAAU7D,YAAc,4BAuC1B,OAlBKF,EAAYG,SAENH,EAAYG,SAAW,EAChC4D,EAAU5D,SAAW,oCACZH,EAAYG,SAAW,KAChC4D,EAAU5D,SAAW,oCAJrB4D,EAAU5D,SAAW,uBAQlBH,EAAYI,UAENJ,EAAYI,UAAY,EACjC2D,EAAU3D,UAAY,kCACN,OAAPP,QAAO,IAAPA,GAAAA,EAASwE,cAAgBrE,EAAYI,UAAYP,EAAQwE,eAClEN,EAAU3D,UAAY,WAAWP,EAAQwE,kCAJzCN,EAAU3D,UAAY,kCAOxBG,EAAUwD,GAC+B,IAAlCO,OAAOC,KAAKR,GAAWS,MAAY,EAsBtCV,GACF,IACE,MAAMW,QAAelF,EAAc,CACjCI,eACGK,EACH0E,OAAQjC,MAGNgC,EAAOE,SACT1F,EAAS,aAAawF,EAAOG,oBAEjC,CAAE,MAAOpD,GACPC,QAAQhC,MAAM,iBAAkB+B,EAClC,CACF,EAgH0CqB,UAAU,MAAKD,SAAA,EAC3CK,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,yBAAwBD,SAAA,EAErCK,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOmC,QAAQ,cAAchC,UAAU,0CAAyCD,SAAC,mBAGjFK,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,OAAMD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SACEoC,KAAK,OACLC,GAAG,cACHlD,KAAK,cACLC,MAAO9B,EAAYE,YACnB8E,SAAUrD,EACVsD,KAAK,IAAI/D,MAAOI,cAAcC,MAAM,KAAK,GACzCsB,UAAW,iDACTvC,EAAOJ,YAAc,iBAAmB,0IAG3CI,EAAOJ,cAAewC,EAAAA,EAAAA,KAAA,KAAGG,UAAU,4BAA2BD,SAAEtC,EAAOJ,eACxE+C,EAAAA,EAAAA,MAAA,KAAGJ,UAAU,6BAA4BD,SAAA,CAAC,kBAAgB,IAAI1B,KAAKrB,EAAQsE,eAAeC,+BAK9FnB,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOmC,QAAQ,WAAWhC,UAAU,0CAAyCD,SAAC,0BAG9EK,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,OAAMD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,UACEqC,GAAG,WACHlD,KAAK,WACLC,MAAO9B,EAAYG,SACnB6E,SAAUrD,EACVkB,UAAW,iDACTvC,EAAOH,SAAW,iBAAmB,wIACgFyC,SAEtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAIsC,KAAIC,IAC3ClC,EAAAA,EAAAA,MAAA,UAAoBnB,MAAOqD,EAAMvC,SAAA,CAC9BuC,EAAM,IAAY,IAAVA,EAAc,QAAU,WADtBA,OAKhB7E,EAAOH,WAAYuC,EAAAA,EAAAA,KAAA,KAAGG,UAAU,4BAA2BD,SAAEtC,EAAOH,kBAKzE8C,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOmC,QAAQ,YAAYhC,UAAU,0CAAyCD,SAAC,yBAG/EK,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,OAAMD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SACEoC,KAAK,SACLC,GAAG,YACHlD,KAAK,YACLC,MAAO9B,EAAYI,UACnB4E,SAAUrD,EACVsD,IAAI,IACJG,IAAKvF,EAAQwE,cAAgB,EAC7BxB,UAAW,iDACTvC,EAAOF,UAAY,iBAAmB,0IAGzCE,EAAOF,YAAasC,EAAAA,EAAAA,KAAA,KAAGG,UAAU,4BAA2BD,SAAEtC,EAAOF,aACtE6C,EAAAA,EAAAA,MAAA,KAAGJ,UAAU,6BAA4BD,SAAA,CAAC,WAAS/C,EAAQwE,cAAgB,MAAM,+BAKrFpB,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOmC,QAAQ,UAAUhC,UAAU,0CAAyCD,SAAC,iCAG7EF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACnBF,EAAAA,EAAAA,KAAA,YACEqC,GAAG,UACHlD,KAAK,UACLC,MAAO9B,EAAYK,QACnB2E,SAAUrD,EACV0D,KAAK,IACLxC,UAAU,oLACVyC,YAAY,kDAMpB5C,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACnBF,EAAAA,EAAAA,KAAA,UACEoC,KAAK,SACLS,SAAU/F,EACVqD,UAAU,8QAA6QD,SAEtRpD,GAAUkD,EAAAA,EAAAA,KAACI,EAAAA,EAAO,CAACC,KAAK,QAAQC,MAAM,UAAa,+BAQ9DN,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,UAC5BK,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,6DAA4DD,SAAA,EACzEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,+BAA8BD,UAC3CF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,kCAAiCD,SAAC,uBAGlDK,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,MAAKD,SAAA,EAElBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACnBK,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,mBAAkBD,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,iEAAgED,UAC7EF,EAAAA,EAAAA,KAAA,OACE8C,IAAK3F,EAAQ4F,OAAO,IAAM,0BAC1BC,IAAK7F,EAAQ8D,MACbd,UAAU,kCAGdI,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,OAAMD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,sCAAqCD,SAAE/C,EAAQ8D,SAC7DV,EAAAA,EAAAA,MAAA,KAAGJ,UAAU,wBAAuBD,SAAA,CAAE/C,EAAQ8F,SAAS9D,KAAK,KAAGhC,EAAQ8F,SAASC,SAChF3C,EAAAA,EAAAA,MAAA,KAAGJ,UAAU,6BAA4BD,SAAA,CAAE/C,EAAQiF,KAAK,MAAIjF,EAAQgG,sBAM1E5C,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,OAAMD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,2CAA0CD,SAAC,mBACzDK,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,YAAWD,SAAA,EACxBK,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,uBAAsBD,SAAA,EACnCF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,wBAAuBD,SAAC,kBACxCF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,wBAAuBD,SAAEX,EAAYpC,EAAQqC,aAE/De,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,uBAAsBD,SAAA,EACnCF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,wBAAuBD,SAAC,cACxCK,EAAAA,EAAAA,MAAA,QAAMJ,UAAU,wBAAuBD,SAAA,CAAE5C,EAAYG,SAAS,IAA2B,IAAzBH,EAAYG,SAAiB,QAAU,gBAEzG8C,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,uBAAsBD,SAAA,EACnCF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,wBAAuBD,SAAC,sBACxCF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,wBAAuBD,SAAEX,EAAYpC,EAAQiG,uBAE/D7C,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,0DAAyDD,SAAA,EACtEF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,8BAA6BD,SAAC,kBAC9CF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,+BAA8BD,SAAEX,EAAYQ,iBAMlEQ,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,2CAA0CD,SAAC,yBACzDF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,wBAAuBD,SAAC,0HAUxC,C","sources":["pages/BookingForm.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams, useNavigate, Link } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { useListing } from '../context/ListingContext';\nimport { useBooking } from '../context/BookingContext';\nimport MainLayout from '../layouts/MainLayout';\nimport Spinner from '../components/common/Spinner';\n\nconst BookingForm = () => {\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const { getListingById } = useListing();\n  const { createBooking, loading, error } = useBooking();\n  \n  const listingId = searchParams.get('listingId');\n  \n  const [listing, setListing] = useState(null);\n  const [bookingData, setBookingData] = useState({\n    checkInDate: '',\n    duration: 1, // in months\n    occupants: 1,\n    message: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [fetchError, setFetchError] = useState(null);\n  \n  useEffect(() => {\n    if (!user) {\n      navigate('/login', { state: { from: `/bookings/new?listingId=${listingId}` } });\n      return;\n    }\n    \n    if (!listingId) {\n      navigate('/search');\n      return;\n    }\n    \n    const fetchListing = async () => {\n      try {\n        const data = await getListingById(listingId);\n        setListing(data);\n        \n        // Set default check-in date to be tomorrow\n        const tomorrow = new Date();\n        tomorrow.setDate(tomorrow.getDate() + 1);\n        setBookingData(prev => ({\n          ...prev,\n          checkInDate: tomorrow.toISOString().split('T')[0]\n        }));\n        \n        setIsLoading(false);\n      } catch (err) {\n        console.error('Error fetching listing:', err);\n        setFetchError('Failed to load listing details. Please try again.');\n        setIsLoading(false);\n      }\n    };\n    \n    fetchListing();\n  }, [listingId, getListingById, navigate, user]);\n  \n  const validateForm = () => {\n    const newErrors = {};\n    \n    // Check-in date validation\n    if (!bookingData.checkInDate) {\n      newErrors.checkInDate = 'Check-in date is required';\n    } else {\n      const selectedDate = new Date(bookingData.checkInDate);\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      \n      if (selectedDate < today) {\n        newErrors.checkInDate = 'Check-in date cannot be in the past';\n      }\n      \n      if (listing?.availableFrom) {\n        const availableFrom = new Date(listing.availableFrom);\n        availableFrom.setHours(0, 0, 0, 0);\n        \n        if (selectedDate < availableFrom) {\n          newErrors.checkInDate = `PG is only available from ${availableFrom.toLocaleDateString()}`;\n        }\n      }\n    }\n    \n    // Duration validation\n    if (!bookingData.duration) {\n      newErrors.duration = 'Duration is required';\n    } else if (bookingData.duration < 1) {\n      newErrors.duration = 'Duration must be at least 1 month';\n    } else if (bookingData.duration > 12) {\n      newErrors.duration = 'Duration cannot exceed 12 months';\n    }\n    \n    // Occupants validation\n    if (!bookingData.occupants) {\n      newErrors.occupants = 'Number of occupants is required';\n    } else if (bookingData.occupants < 1) {\n      newErrors.occupants = 'At least 1 occupant is required';\n    } else if (listing?.maxOccupancy && bookingData.occupants > listing.maxOccupancy) {\n      newErrors.occupants = `Maximum ${listing.maxOccupancy} occupants allowed`;\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setBookingData(prev => ({\n      ...prev,\n      [name]: name === 'duration' || name === 'occupants' ? parseInt(value, 10) : value\n    }));\n    \n    // Clear error for the field being edited\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: null\n      }));\n    }\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (validateForm()) {\n      try {\n        const result = await createBooking({\n          listingId,\n          ...bookingData,\n          amount: calculateTotalAmount()\n        });\n        \n        if (result.success) {\n          navigate(`/bookings/${result.bookingId}/confirm`);\n        }\n      } catch (err) {\n        console.error('Booking error:', err);\n      }\n    }\n  };\n  \n  // Format currency for display\n  const formatPrice = (price) => {\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      maximumFractionDigits: 0\n    }).format(price);\n  };\n  \n  // Calculate total amount based on duration\n  const calculateTotalAmount = () => {\n    if (!listing) return 0;\n    return listing.price * bookingData.duration;\n  };\n  \n  if (isLoading) {\n    return (\n      <MainLayout>\n        <div className=\"flex justify-center items-center min-h-screen\">\n          <Spinner size=\"large\" color=\"indigo\" />\n        </div>\n      </MainLayout>\n    );\n  }\n  \n  if (fetchError || !listing) {\n    return (\n      <MainLayout>\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"bg-red-50 border-l-4 border-red-400 p-4 rounded-md\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm text-red-700\">\n                  {fetchError || 'Listing not found. Please try again.'}\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-4 text-center\">\n            <Link\n              to=\"/search\"\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-[#FE6F61] hover:bg-[#e55a4d] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FE6F61]\"\n            >\n              Browse Listings\n            </Link>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n  \n  return (\n    <MainLayout>\n      <div className=\"bg-gray-50 min-h-screen\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          {/* Breadcrumbs */}\n          <nav className=\"flex mb-4\" aria-label=\"Breadcrumb\">\n            <ol className=\"flex items-center space-x-2\">\n              <li>\n                <Link to=\"/\" className=\"text-gray-500 hover:text-gray-700\">Home</Link>\n              </li>\n              <li className=\"flex items-center\">\n                <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                </svg>\n                <Link to={`/listings/${listingId}`} className=\"ml-2 text-gray-500 hover:text-gray-700\">\n                  {listing.title}\n                </Link>\n              </li>\n              <li className=\"flex items-center\">\n                <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                </svg>\n                <span className=\"ml-2 text-gray-900 font-medium\">Book Now</span>\n              </li>\n            </ol>\n          </nav>\n          \n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {/* Booking Form */}\n            <div className=\"lg:col-span-2\">\n              <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\n                <div className=\"p-6 border-b border-gray-200\">\n                  <h1 className=\"text-2xl font-bold text-gray-900\">Book Your Stay</h1>\n                  <p className=\"text-gray-600\">Fill in the details to complete your booking</p>\n                </div>\n                \n                {error && (\n                  <div className=\"mx-6 mt-4 bg-red-50 border-l-4 border-red-400 p-4\">\n                    <div className=\"flex\">\n                      <div className=\"flex-shrink-0\">\n                        <svg className=\"h-5 w-5 text-red-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                      </div>\n                      <div className=\"ml-3\">\n                        <p className=\"text-sm text-red-700\">\n                          {error}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                \n                <form onSubmit={handleSubmit} className=\"p-6\">\n                  <div className=\"grid grid-cols-1 gap-6\">\n                    {/* Check-in Date */}\n                    <div>\n                      <label htmlFor=\"checkInDate\" className=\"block text-sm font-medium text-gray-700\">\n                        Check-in Date\n                      </label>\n                      <div className=\"mt-1\">\n                        <input\n                          type=\"date\"\n                          id=\"checkInDate\"\n                          name=\"checkInDate\"\n                          value={bookingData.checkInDate}\n                          onChange={handleChange}\n                          min={new Date().toISOString().split('T')[0]} // Minimum date is today\n                          className={`appearance-none block w-full px-3 py-2 border ${\n                            errors.checkInDate ? 'border-red-300' : 'border-gray-300'\n                          } rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-[#FE6F61] focus:border-[#FE6F61] sm:text-sm`}\n                        />\n                        {errors.checkInDate && <p className=\"mt-2 text-sm text-red-600\">{errors.checkInDate}</p>}\n                        <p className=\"mt-1 text-sm text-gray-500\">Available from {new Date(listing.availableFrom).toLocaleDateString()}</p>\n                      </div>\n                    </div>\n                    \n                    {/* Duration */}\n                    <div>\n                      <label htmlFor=\"duration\" className=\"block text-sm font-medium text-gray-700\">\n                        Duration (in months)\n                      </label>\n                      <div className=\"mt-1\">\n                        <select\n                          id=\"duration\"\n                          name=\"duration\"\n                          value={bookingData.duration}\n                          onChange={handleChange}\n                          className={`appearance-none block w-full px-3 py-2 border ${\n                            errors.duration ? 'border-red-300' : 'border-gray-300'\n                          } rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-[#FE6F61] focus:border-[#FE6F61] sm:text-sm`}\n                        >\n                          {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map(month => (\n                            <option key={month} value={month}>\n                              {month} {month === 1 ? 'month' : 'months'}\n                            </option>\n                          ))}\n                        </select>\n                        {errors.duration && <p className=\"mt-2 text-sm text-red-600\">{errors.duration}</p>}\n                      </div>\n                    </div>\n                    \n                    {/* Number of Occupants */}\n                    <div>\n                      <label htmlFor=\"occupants\" className=\"block text-sm font-medium text-gray-700\">\n                        Number of Occupants\n                      </label>\n                      <div className=\"mt-1\">\n                        <input\n                          type=\"number\"\n                          id=\"occupants\"\n                          name=\"occupants\"\n                          value={bookingData.occupants}\n                          onChange={handleChange}\n                          min=\"1\"\n                          max={listing.maxOccupancy || 4}\n                          className={`appearance-none block w-full px-3 py-2 border ${\n                            errors.occupants ? 'border-red-300' : 'border-gray-300'\n                          } rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-[#FE6F61] focus:border-[#FE6F61] sm:text-sm`}\n                        />\n                        {errors.occupants && <p className=\"mt-2 text-sm text-red-600\">{errors.occupants}</p>}\n                        <p className=\"mt-1 text-sm text-gray-500\">Maximum {listing.maxOccupancy || 'N/A'} occupants allowed</p>\n                      </div>\n                    </div>\n                    \n                    {/* Additional Message */}\n                    <div>\n                      <label htmlFor=\"message\" className=\"block text-sm font-medium text-gray-700\">\n                        Message to Owner (Optional)\n                      </label>\n                      <div className=\"mt-1\">\n                        <textarea\n                          id=\"message\"\n                          name=\"message\"\n                          value={bookingData.message}\n                          onChange={handleChange}\n                          rows=\"3\"\n                          className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-[#FE6F61] focus:border-[#FE6F61] sm:text-sm\"\n                          placeholder=\"Any special requests or questions...\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"mt-6\">\n                    <button\n                      type=\"submit\"\n                      disabled={loading}\n                      className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-[#FE6F61] hover:bg-[#e55a4d] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FE6F61] disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      {loading ? <Spinner size=\"small\" color=\"white\" /> : 'Confirm Booking'}\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n            \n            {/* Booking Summary */}\n            <div className=\"lg:col-span-1\">\n              <div className=\"bg-white rounded-lg shadow-lg overflow-hidden sticky top-4\">\n                <div className=\"p-6 border-b border-gray-200\">\n                  <h2 className=\"text-lg font-bold text-gray-900\">Booking Summary</h2>\n                </div>\n                \n                <div className=\"p-6\">\n                  {/* Property Details */}\n                  <div className=\"mb-6\">\n                    <div className=\"flex items-start\">\n                      <div className=\"w-20 h-20 bg-gray-200 rounded-md overflow-hidden flex-shrink-0\">\n                        <img \n                          src={listing.images[0] || '/images/placeholder.jpg'} \n                          alt={listing.title}\n                          className=\"w-full h-full object-cover\"\n                        />\n                      </div>\n                      <div className=\"ml-4\">\n                        <h3 className=\"text-md font-semibold text-gray-900\">{listing.title}</h3>\n                        <p className=\"text-sm text-gray-600\">{listing.location.name}, {listing.location.city}</p>\n                        <p className=\"text-sm text-gray-600 mt-1\">{listing.type} | {listing.occupancy}</p>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* Price Details */}\n                  <div className=\"mb-6\">\n                    <h3 className=\"text-md font-semibold text-gray-900 mb-3\">Price Details</h3>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-gray-600\">Monthly Rent</span>\n                        <span className=\"text-sm text-gray-900\">{formatPrice(listing.price)}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-gray-600\">Duration</span>\n                        <span className=\"text-sm text-gray-900\">{bookingData.duration} {bookingData.duration === 1 ? 'month' : 'months'}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-gray-600\">Security Deposit</span>\n                        <span className=\"text-sm text-gray-900\">{formatPrice(listing.securityDeposit)}</span>\n                      </div>\n                      <div className=\"pt-2 mt-2 border-t border-gray-200 flex justify-between\">\n                        <span className=\"font-semibold text-gray-900\">Total Amount</span>\n                        <span className=\"font-semibold text-[#FE6F61]\">{formatPrice(calculateTotalAmount())}</span>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* Cancellation Policy */}\n                  <div>\n                    <h3 className=\"text-md font-semibold text-gray-900 mb-3\">Cancellation Policy</h3>\n                    <p className=\"text-sm text-gray-600\">\n                      Free cancellation within 24 hours of booking. After that, the security deposit is non-refundable.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default BookingForm; "],"names":["BookingForm","searchParams","useSearchParams","navigate","useNavigate","user","useAuth","getListingById","useListing","createBooking","loading","error","useBooking","listingId","get","listing","setListing","useState","bookingData","setBookingData","checkInDate","duration","occupants","message","errors","setErrors","isLoading","setIsLoading","fetchError","setFetchError","useEffect","state","from","async","data","tomorrow","Date","setDate","getDate","prev","toISOString","split","err","console","fetchListing","handleChange","e","name","value","target","parseInt","formatPrice","price","Intl","NumberFormat","style","currency","maximumFractionDigits","format","calculateTotalAmount","_jsx","MainLayout","children","className","Spinner","size","color","_jsxs","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Link","to","title","onSubmit","preventDefault","validateForm","newErrors","selectedDate","today","setHours","availableFrom","toLocaleDateString","maxOccupancy","Object","keys","length","result","amount","success","bookingId","htmlFor","type","id","onChange","min","map","month","max","rows","placeholder","disabled","src","images","alt","location","city","occupancy","securityDeposit"],"sourceRoot":""}