{"version":3,"file":"static/js/912.3a7b0f8e.chunk.js","mappings":"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","sources":["pages/owner/OwnerBookings.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst OwnerBookings = () => {\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [filter, setFilter] = useState('all');\n\n  useEffect(() => {\n    const fetchBookings = async () => {\n      try {\n        const response = await axios.get('/api/owner/bookings');\n        setBookings(response.data);\n      } catch (error) {\n        setError(error.response?.data?.message || 'Failed to fetch bookings');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchBookings();\n  }, []);\n\n  const handleStatusUpdate = async (bookingId, newStatus) => {\n    try {\n      await axios.patch(`/api/bookings/${bookingId}/status`, { status: newStatus });\n      setBookings(bookings.map(booking => \n        booking._id === bookingId ? { ...booking, status: newStatus } : booking\n      ));\n    } catch (error) {\n      setError(error.response?.data?.message || 'Failed to update booking status');\n    }\n  };\n\n  const filteredBookings = bookings.filter(booking => {\n    if (filter === 'all') return true;\n    return booking.status === filter;\n  });\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-6\">Bookings</h1>\n\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n          {error}\n        </div>\n      )}\n\n      <div className=\"mb-6\">\n        <select\n          value={filter}\n          onChange={(e) => setFilter(e.target.value)}\n          className=\"border rounded-lg px-4 py-2\"\n        >\n          <option value=\"all\">All Bookings</option>\n          <option value=\"pending\">Pending</option>\n          <option value=\"confirmed\">Confirmed</option>\n          <option value=\"cancelled\">Cancelled</option>\n        </select>\n      </div>\n\n      {filteredBookings.length === 0 ? (\n        <div className=\"text-center py-8\">\n          <p className=\"text-gray-600\">No bookings found.</p>\n        </div>\n      ) : (\n        <div className=\"bg-white shadow overflow-hidden rounded-lg\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Property\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Tenant\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Check-in\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {filteredBookings.map((booking) => (\n                <tr key={booking._id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <Link\n                      to={`/listings/${booking.listing._id}`}\n                      className=\"text-blue-600 hover:text-blue-800\"\n                    >\n                      {booking.listing.title}\n                    </Link>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    {booking.user.name}\n                    <div className=\"text-sm text-gray-500\">{booking.user.email}</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    {new Date(booking.checkInDate).toLocaleDateString()}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full \n                      ${booking.status === 'confirmed' ? 'bg-green-100 text-green-800' : \n                        booking.status === 'pending' ? 'bg-yellow-100 text-yellow-800' : \n                        'bg-red-100 text-red-800'}`}\n                    >\n                      {booking.status.charAt(0).toUpperCase() + booking.status.slice(1)}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    {booking.status === 'pending' && (\n                      <div className=\"space-x-2\">\n                        <button\n                          onClick={() => handleStatusUpdate(booking._id, 'confirmed')}\n                          className=\"text-green-600 hover:text-green-800\"\n                        >\n                          Confirm\n                        </button>\n                        <button\n                          onClick={() => handleStatusUpdate(booking._id, 'cancelled')}\n                          className=\"text-red-600 hover:text-red-800\"\n                        >\n                          Cancel\n                        </button>\n                      </div>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OwnerBookings; "],"names":["OwnerBookings","bookings","setBookings","useState","loading","setLoading","error","setError","filter","setFilter","useEffect","async","response","axios","get","data","_error$response","_error$response$data","message","fetchBookings","handleStatusUpdate","bookingId","newStatus","patch","status","map","booking","_id","_error$response2","_error$response2$data","filteredBookings","_jsx","children","_jsxs","className","value","onChange","e","target","length","Link","to","listing","title","user","name","email","Date","checkInDate","toLocaleDateString","charAt","toUpperCase","slice","onClick"],"sourceRoot":""}